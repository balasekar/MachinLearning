library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
View(training_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State + Profile,
data = dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend ,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend ,
data = dataset)
summary(regressor)
setwd("~/Desktop/workspace/learn/Machine-Learning-Tutorials/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
dataset = dataset[2:3]
View(dataset)
lin_reg = lm(formula = Salary ~ .,
data = dataset)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
# Predicting a new result with Linear Regression
predict(lin_reg, data.frame(Level = 6.5))
# Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
setwd("~/Desktop/workspace/ML-workspace/predictConsumption")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
lin_reg = lm(formula = Salary ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
dataset = read.csv('Data.csv')
View(dataset)
dataset$Consumption1 = ifelse(is.na(dataset$Consumption1),
ave(dataset$Consumption1, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Consumption1)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
split = sample.split(dataset$Salary, SplitRatio = 0.80)
dataset = dataset[1:3]
dataset = read.csv('Data.csv')
dataset$Consumption1 = ifelse(is.na(dataset$Consumption1),
ave(dataset$Consumption1, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Consumption1)
dataset = dataset[1:2,4]
dataset = read.csv('Data.csv')
# Taking care of missing data
dataset$Consumption1 = ifelse(is.na(dataset$Consumption1),
ave(dataset$Consumption1, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Consumption1)
split = sample.split(dataset$Consumption2, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
View(test_set)
training_set = scale(training_set)
test_set = scale(test_set)
lin_reg = lm(formula = Consumption2 ~ .,
data = dataset)
dataset = read.csv('Data.csv')
# Taking care of missing data
dataset$Consumption1 = ifelse(is.na(dataset$Consumption1),
ave(dataset$Consumption1, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Consumption1)
dataset = dataset[1:2,4]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption2, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
dataset = read.csv('Data.csv')
View(dataset)
dataset$Consumption1 = ifelse(is.na(dataset$Consumption1),
ave(dataset$Consumption1, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Consumption1)
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption2, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
training_set = scale(training_set)
test_set = scale(test_set)
View(test_set)
View(training_set)
lin_reg = lm(formula = Consumption2 ~ .,
data = training_set)
# Importing the dataset
dataset = read.csv('Data.csv')
# Taking care of missing data
dataset$Consumption1 = ifelse(is.na(dataset$Consumption1),
ave(dataset$Consumption1, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Consumption1)
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption2, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
lin_reg = lm(formula = Consumption2 ~ .,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption2 ~ Temp + Month ,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption2 ~ Temp ,
data = training_set)
summary(lin_reg)
y_pred = predict(regressor, newdata = test_set)
y_pred = predict(lin_reg, newdata = test_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption2),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Linear Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
dataset = read.csv('Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
lin_reg = lm(formula = Consumption2 ~ .,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption ~ .,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption2 ~ Temp + MinTemp ,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption2 ~ Temp ,
data = training_set)
lin_reg = lm(formula = Consumption ~ Temp + MinTemp ,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption ~ Temp ,
data = training_set)
summary(lin_reg)
y_pred = predict(lin_reg, newdata = test_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Linear Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
dataset = read.csv('Data.csv')
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
lin_reg = lm(formula = Consumption ~ .,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption ~ Temp + Bedrooms,
data = training_set)
summary(lin_reg)
y_pred = predict(lin_reg, newdata = test_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Linear Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
dataset$Bedrooms2 = dataset$Bedrooms^2
poly_reg = lm(formula = Consumption ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
dataset$Bedrooms3 = dataset$Bedrooms^3
poly_reg = lm(formula = Consumption ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
dataset = read.csv('Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
lin_reg = lm(formula = Consumption ~ .,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption ~ Temp + Bedrooms,
data = training_set)
summary(lin_reg)
y_pred = predict(lin_reg, newdata = test_set)
summary(y_pred)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Linear Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
dataset$Temp2 = dataset$Temp^2
dataset$Temp3 = dataset$Temp^3
poly_reg = lm(formula = Consumption ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Linear Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
library(ggplot2)
x_grid = seq(min(dataset$Temp), max(dataset$Temp), 0.1)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Temp = x_grid,
Temp2 = x_grid^2,
Temp3 = x_grid^3))),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
poly_reg = lm(formula = Consumption ~ MinTemp + Temp + Temp2 + Temp3 + Bedrooms,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
library(ggplot2)
x_grid = seq(min(dataset$Temp), max(dataset$Temp), 0.1)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Temp = x_grid,
Temp2 = x_grid^2,
Temp3 = x_grid^3))),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
poly_reg = lm(formula = Consumption ~  Temp + Temp2 + Temp3 + Bedrooms,
data = dataset)
library(ggplot2)
x_grid = seq(min(dataset$Temp), max(dataset$Temp), 0.1)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Temp = x_grid,
Temp2 = x_grid^2,
Temp3 = x_grid^3))),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
poly_reg = lm(formula = Consumption ~  Temp + Temp2 + Temp3 ,
data = dataset)
library(ggplot2)
x_grid = seq(min(dataset$Temp), max(dataset$Temp), 0.1)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Temp = x_grid,
Temp2 = x_grid^2,
Temp3 = x_grid^3))),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
poly_reg = lm(formula = Consumption ~  Temp + Temp2 + Temp3 + Bedrooms,
data = dataset)
library(ggplot2)
x_grid = seq(min(dataset$Temp), max(dataset$Temp), 0.1)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Temp = x_grid,
Bedrooms = x_grid,
Temp2 = x_grid^2,
Temp3 = x_grid^3))),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
poly_reg = lm(formula = Consumption ~  Temp + Temp2 + Temp3 ,
data = dataset)
library(ggplot2)
x_grid = seq(min(dataset$Temp), max(dataset$Temp), 0.1)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Temp = x_grid,
Temp2 = x_grid^2,
Temp3 = x_grid^3))),
colour = 'blue') +
ggtitle('Polynomial Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
predict(lin_reg, data.frame(Temp = 51))
predict(lin_reg, data.frame(Temp = 51, Bedrooms = 3))
dataset = read.csv('Data.csv')
# Splitting the dataset into the Training set and Test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Consumption, SplitRatio = 0.80)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Consumption ~ .,
data = training_set)
summary(lin_reg)
lin_reg = lm(formula = Consumption ~ Temp + Bedrooms,
data = training_set)
summary(lin_reg)
y_pred = predict(lin_reg, newdata = test_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Temp, y = dataset$Consumption),
colour = 'red') +
geom_line(aes(x = dataset$Temp, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Linear Regression - Consumption Prediction Model') +
xlab('Temperature') +
ylab('Consumption')
